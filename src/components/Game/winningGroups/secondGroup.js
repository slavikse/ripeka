// Группа усложнена тем, что знаки расположены во всех 3х наборах.
// Знак игрока проверяется в каждом из 3х наборов в той же вертикали.

// Выигрышные наборы для второй группы:
//  1.  2.  3.
// X** *X* **X
// X** *X* **X
// X** *X* **X

// Принимает шаг, что позволило объединиться с 3 выигрышной группой.
export default function secondGroup({ cells, currentSign, start, step }) {
  // Будет равен 3, если нужные ячейки равны знаку игрока,
  // в этом случае, победа засчитывается за этим игроком.
  let success = 0;
  // Сохранение позиции для найденного сопадения,
  // когда нужно будет продолжить поиск в следующем наборе.
  let iSave = 0;

  // Разделение на наборы по 3 ячейки (каждая по 3).
  // Достигнута 3 ячейка (вертикаль) - переходит на следующий набор.
  // Для победы нужны совпадения 3х ячеек в 3х наборах на тех же позициях.
  for (let i = start; i < cells.length; i++) {
    const sign = cells[i];
    console.log('1 sign', sign);
    console.log('2 i', i);

    // Сброс совпадений при переходе на вне групповую ячейку.
    // Каждая 3 ячейка (вертикаль) начиная с самой первой - нулевой.
    console.log('3 currentSign', currentSign);
    if (sign === currentSign) {
      success += 1;
      console.log('4 success', success);

      // Защита от переполнения в процессе проверки всех ячеек в группе.
      // Для возможности вернуться на эту позицию для продолжения поиска,
      // когда ячейка принадлежала игроку в самый первый раз.
      if (success === 1) {
        iSave = i;
        console.log('5 iSave', iSave);
      }

      // Переход к следующей группе (вертикаль).
      // Еще +1 даст инкремент цикла.
      i += step;
      console.log('6 step', step);
      console.log('7 i', i);
    } else {
      // Ранее было найдено совпадение, но для этого знака - его нет.
      if (success !== 0) {
        // Возврат на сохраненную позицию - первого найденного совпадения.
        i = iSave;
        console.log('8 i', i);
      }

      success = 0;
      console.log('9 success', success);

      // Выходит из итерации - дошел до последнего набора (вертикаль).
      if (i === 2) {
        break;
      }
    }
  }

  console.log('SUCCESS', success);

  // С 3 очками, игрок выходит победителем.
  return success === 3;
}
